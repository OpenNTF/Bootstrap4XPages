<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xe="http://www.ibm.com/xsp/coreex"
	xmlns:xc="http://www.ibm.com/xsp/custom">
	<xc:OneUILayout id="cc4cconeuilayout"  navigationPath="/Domino/Pickers">
		<xp:this.facets>
			<xp:panel xp:key="LeftColumn" id="panel4">
				<xc:LeftDomino id="cc4ccLeftDomino" ></xc:LeftDomino>
			</xp:panel>
		</xp:this.facets>
		<xp:panel>
			<xp:label value="Domino Pickers demo" id="label5" style="font-weight:bold">
			</xp:label>
			<xp:br></xp:br>
			The pickers also contribute the content&#160;
			of a typeahead
			control, and validated using a custom validator
			<xp:br></xp:br>
			<xp:tabbedPanel id="tabbedPanel1">
				<xp:this.selectedTab>
				    <![CDATA[#{javascript:context.getUrlParameter("tab")}]]>
				</xp:this.selectedTab>
				<xp:tabPanel label="Value Pickers" id="tabPanel1">
					<xp:table role="presentation">
						<xp:tr align="center">
							<xp:td colspan="2"><xp:div style="text-align:center"><xp:span style="font-weight:bold">ListBox picker</xp:span></xp:div></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText1"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText2"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText1">
									<xp:this.validators>
										<xe:pickerValidator
											for="valuePicker1" message="The value is invalid">
										</xe:pickerValidator>
									</xp:this.validators>
									<xp:typeAhead mode="partial"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker1").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker1"
									for="inputText1">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText2"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker2").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker2"
									for="inputText2">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText3"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText4"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText3">
									<xp:this.validators>
										<xe:pickerValidator
											message="The value is invalid">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
										</xe:pickerValidator>
									</xp:this.validators>
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true" valueMarkup="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker1").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker3"
									for="inputText3">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText4"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true"
										valueMarkup="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker4").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker4"
									for="inputText4">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2">
								<xp:div style="text-align:center">
									<xp:span style="font-weight:bold">ListBox with Search</xp:span>
								</xp:div>
							</xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Search Key" for="inputText23"></xp:label></xp:td>
							<xp:td><xp:label value="Full Text Search" for="inputText24"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText23">
								</xp:inputText>
								<xe:valuePicker id="valuePicker9" for="inputText23" dojoType="extlib.dijit.PickerListSearch">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker viewName="AllEMails"
											labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText24">
								</xp:inputText>
								<xe:valuePicker id="valuePicker10" for="inputText24" dojoType="extlib.dijit.PickerListSearch">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name"
											searchType="ftSearch">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2"><xp:div style="text-align:center"><xp:span style="font-weight:bold">CheckBox picker</xp:span></xp:div></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText5"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText6"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText5">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker5").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker5"
									for="inputText5" dojoType="extlib.dijit.PickerCheckbox">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText6"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker6").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker6"
									for="inputText6" dojoType="extlib.dijit.PickerCheckbox">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2" style="font-weight:bold;text-align:center">Validated Text Boxes</xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText17"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText18"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText17">
									<xp:this.validators>
										<xe:pickerValidator
											for="valuePicker7" message="The value is invalid">
										</xe:pickerValidator>
									</xp:this.validators>
									<xp:typeAhead mode="partial"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker7").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker7"
									for="inputText17">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText18"
									multipleSeparator=",">
									<xp:this.validators>
										<xp:customValidator>
											<xp:this.validate><![CDATA[#{javascript:var picker = getComponent('valuePicker8')
if(!picker.isValidValue(value)) {
	return "Invalid value: "+value
}}]]></xp:this.validate>
										</xp:customValidator>
									</xp:this.validators>
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("valuePicker8").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:valuePicker id="valuePicker8"
									for="inputText18">
									<xe:this.dataProvider>
										<xe:dominoViewValuePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewValuePicker>
									</xe:this.dataProvider>
								</xe:valuePicker>
							</xp:td>
						</xp:tr>
					</xp:table>
					<xp:br/>
					<xp:button value="Validate"
						id="button2">
					<xp:eventHandler event="onclick" submit="true"
						refreshMode="complete">
					</xp:eventHandler></xp:button>
					<xp:messages id="messages1"></xp:messages>
				</xp:tabPanel>
				<xp:tabPanel label="Name Pickers" id="tabPanel2">
					<xp:table role="presentation">
						<xp:tr align="center">
							<xp:td colspan="2"><xp:div style="text-align:center"><xp:span style="font-weight:bold">Domino NAB</xp:span></xp:div></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText7"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText8"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText7">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker1").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker1"
									for="inputText7">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText8"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker2").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker2"
									for="inputText8">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						
						
						<xp:tr>
							<xp:td><xp:label value="People By LastName" for="inputText19"></xp:label></xp:td>
							<xp:td><xp:label value="People Only" for="inputText20"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText19">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker13").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker13"
									for="inputText19">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker
											nameList="peopleByLastName">
										</xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText20"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker14").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker14"
									for="inputText20">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker
											nameList="people">
										</xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						
						
						<xp:tr>
							<xp:td>
								<xp:label value="NAB discovery (session.getAddressBooks)" for="inputText13"></xp:label>
							</xp:td>
							<xp:td><xp:label value="NAB set to names.nsf" for="inputText14"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText13">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker7").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker7"
									for="inputText13">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText14" multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker8").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker8"
									for="inputText14">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker
											addressBookDb="names.nsf" addressBookSel="db-name">
										</xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2">
								<xp:div style="text-align:center"><xp:span style="font-weight:bold">List of users in the database (domino view)
							</xp:span></xp:div></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText9"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText10"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText9">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker3").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker3"
									for="inputText9">
									<xe:this.dataProvider>
										<xe:dominoViewNamePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText10"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker4").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker4"
									for="inputText10">
									<xe:this.dataProvider>
										<xe:dominoViewNamePicker
											viewName="AllEMails" labelColumn="Name">
										</xe:dominoViewNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2">
								<xp:div style="text-align:center"><xp:span style="font-weight:bold">Aggregated Directories (Domino directory
								and database view)
							</xp:span></xp:div></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText11"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText12"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText11">
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker5").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker5"
									for="inputText11">
									<xe:this.dataProvider>
										<xe:namePickerAggregator>
											<xe:this.dataProviders>
												<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
												<xe:dominoViewNamePicker
													viewName="AllEMails" labelColumn="Name"
													label="Database View">
												</xe:dominoViewNamePicker>
											</xe:this.dataProviders>
										</xe:namePickerAggregator>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText12"
									multipleSeparator=",">
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker6").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker6"
									for="inputText12">
									<xe:this.dataProvider>
										<xe:namePickerAggregator>
											<xe:this.dataProviders>
												<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
												<xe:dominoViewNamePicker
													viewName="AllEMails" labelColumn="Name"
													label="Database View">
												</xe:dominoViewNamePicker>
											</xe:this.dataProviders>
										</xe:namePickerAggregator>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2" style="font-weight:bold;text-align:center">Name Text Box</xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText15"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText16"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xe:djextNameTextBox
									id="inputText15">
								</xe:djextNameTextBox>
								<xe:namePicker id="namePicker10"
									for="inputText15" pickerText="Set">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xe:djextNameTextBox id="inputText16"
									multipleSeparator=",">
								</xe:djextNameTextBox>
								<xe:namePicker id="namePicker9"
									for="inputText16" pickerText="Add">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
						<xp:tr align="center">
							<xp:td colspan="2" style="font-weight:bold;text-align:center">Validated Text Boxes</xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td><xp:label value="Simple Value" for="inputText21"></xp:label></xp:td>
							<xp:td><xp:label value="Multiple Values" for="inputText22"></xp:label></xp:td>
						</xp:tr>
						<xp:tr>
							<xp:td>
								<xp:inputText id="inputText21">
									<xp:this.validators>
										<xp:customValidator>
											<xp:this.validate><![CDATA[#{javascript:var picker = getComponent('namePicker11')
if(!picker.isValidValue(value)) {
	return "Invalid value: "+value
}}]]></xp:this.validate>
										</xp:customValidator>
									</xp:this.validators>
									<xp:typeAhead mode="full"
										minChars="1" preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker11").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker11"
									for="inputText21">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
							<xp:td>
								<xp:inputText id="inputText22"
									multipleSeparator=",">
									<xp:this.validators>
										<xp:customValidator>
											<xp:this.validate><![CDATA[#{javascript:var picker = getComponent('namePicker12')
if(!picker.isValidValue(value)) {
	return "Invalid value: "+value
}}]]></xp:this.validate>
										</xp:customValidator>
									</xp:this.validators>
									<xp:typeAhead mode="full"
										minChars="1" tokens="," preventFiltering="true">
										<xp:this.valueList><![CDATA[#{javascript:getComponent("namePicker12").getTypeAheadValue(this)}]]></xp:this.valueList>
									</xp:typeAhead>
								</xp:inputText>
								<xe:namePicker id="namePicker12"
									for="inputText22">
									<xe:this.dataProvider>
										<xe:dominoNABNamePicker></xe:dominoNABNamePicker>
									</xe:this.dataProvider>
								</xe:namePicker>
							</xp:td>
						</xp:tr>
					</xp:table>
					<xp:br/>
					<xp:button value="Validate"
						id="button1">
					<xp:eventHandler event="onclick"
						submit="true" refreshMode="complete">
					</xp:eventHandler></xp:button>
					<xp:messages id="messages2"></xp:messages>
				</xp:tabPanel>
			</xp:tabbedPanel>
		</xp:panel>
	</xc:OneUILayout>
</xp:view>

