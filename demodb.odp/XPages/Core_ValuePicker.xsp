<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xe="http://www.ibm.com/xsp/coreex"
	xmlns:xc="http://www.ibm.com/xsp/custom">
	<xc:OneUILayout id="cc4cconeuilayout"  navigationPath="/Core/ValuePicker">
		<xp:this.facets>
			<xp:panel xp:key="LeftColumn" id="panel4">
				<xc:LeftCore id="cc4ccLeftCore" ></xc:LeftCore>
			</xp:panel>
		</xp:this.facets>
		<xp:panel>
			<xp:label value="Value Pickers" id="label5" style="font-weight:bold">
			</xp:label>
			<xp:br></xp:br>
			This pages shows the use of value pickers, using different rendering
			and data providers
			<xp:br></xp:br><xp:br></xp:br>
			<xp:table role="presentation">
				<xp:tr align="center" style="margin-top: 20px">
					<xp:td colspan="2" style="font-weight:bold">
						US States coming from a custom bean
							</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td><xp:label value="ListBox picker single value" for="inputText5"></xp:label></xp:td>
					<xp:td><xp:label value="CheckBox picker single value" for="inputText6"></xp:label></xp:td>
					<xp:td><xp:label value="Listbox with Search single value" for="inputText9"></xp:label></xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:inputText id="inputText5">
						</xp:inputText>
						<xe:valuePicker id="valuePicker5" for="inputText5">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText6">
						</xp:inputText>
						<xe:valuePicker id="valuePicker6" for="inputText6"
							dojoType="extlib.dijit.PickerCheckbox">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText9">
						</xp:inputText>
						<xe:valuePicker id="valuePicker9" for="inputText9"
							dojoType="extlib.dijit.PickerListSearch">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td><xp:label value="ListBox picker multiple value" for="inputText7"></xp:label></xp:td>
					<xp:td><xp:label value="CheckBox picker multiple value" for="inputText8"></xp:label></xp:td>
					<xp:td><xp:label value="Listbox with Search multiple value" for="inputText10"></xp:label></xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:inputText id="inputText7" multipleSeparator=",">
						</xp:inputText>
						<xe:valuePicker id="valuePicker7" for="inputText7">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText8" multipleSeparator=",">
						</xp:inputText>
						<xe:valuePicker id="valuePicker8" for="inputText8"
							dojoType="extlib.dijit.PickerCheckbox">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText10" multipleSeparator=",">
						</xp:inputText>
						<xe:valuePicker id="valuePicker10" for="inputText10"
							dojoType="extlib.dijit.PickerListSearch">
							<xe:this.dataProvider>
								<xe:beanValuePicker dataBean="extlib.pickers.SimplePicker">
								</xe:beanValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
				</xp:tr>
			</xp:table>
			<xp:br></xp:br>
			<xp:table role="presentation">
				<xp:tr align="center">
					<xp:td colspan="2" style="font-weight:bold">
						Simple String Content (hard coded string)
							</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td><xp:label value="Value without a label" for="inputText1"></xp:label></xp:td>
					<xp:td><xp:label value="Value with a label" for="inputText2"></xp:label></xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:inputText id="inputText1">
						</xp:inputText>
						<xe:valuePicker id="valuePicker1" for="inputText1">
							<xe:this.dataProvider>
								<xe:simpleValuePicker>
									<xe:this.valueList><![CDATA[a
b
c
d
e
f
g
h]]></xe:this.valueList>
								</xe:simpleValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText2">
						</xp:inputText>
						<xe:valuePicker id="valuePicker2" for="inputText2">
							<xe:this.dataProvider>
								<xe:simpleValuePicker labelSeparator="|">
									<xe:this.valueList><![CDATA[A|a
B|b
C|c
D|d
E|e
F|f
G|g
H|h]]></xe:this.valueList>
								</xe:simpleValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
				</xp:tr>
			</xp:table>
			<xp:br></xp:br>
			<xp:table role="presentation">
				<xp:tr align="center" style="margin-top: 20px">
					<xp:td colspan="2" style="font-weight:bold">
						Simple string array returned by a JavaScript
						formula
							</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td><xp:label value="Value without a label" for="inputText3"></xp:label></xp:td>
					<xp:td><xp:label value="Value with a label" for="inputText4"></xp:label></xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:inputText id="inputText3">
						</xp:inputText>
						<xe:valuePicker id="valuePicker3" for="inputText3">
							<xe:this.dataProvider>
								<xe:simpleValuePicker>
									<xe:this.valueList><![CDATA[#{javascript:var a = new Array("a","b","c","d","e","f","g","h")
return a}]]></xe:this.valueList>
								</xe:simpleValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
					<xp:td>
						<xp:inputText id="inputText4">
						</xp:inputText>
						<xe:valuePicker id="valuePicker4" for="inputText4">
							<xe:this.dataProvider>
								<xe:simpleValuePicker labelSeparator="|">
									<xe:this.valueList><![CDATA[#{javascript:var a = new Array("A|a","B|b","C|c","D|d","E|e","F|f","G|g","H|h")
return a}]]></xe:this.valueList>
								</xe:simpleValuePicker>
							</xe:this.dataProvider>
						</xe:valuePicker>
					</xp:td>
				</xp:tr>
			</xp:table>
		</xp:panel>
	</xc:OneUILayout>
</xp:view>

